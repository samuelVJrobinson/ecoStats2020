## How do I know if any of these effects matter?
How do I check if the things that I put in my model are useful for predicting the thing that I'm interested in?

\begin{itemize}[<+->]
\item drop-1 (Type III) ANOVA for \emph{entire factors}
  \begin{itemize}
  \item e.g. "Does adding \emph{gear} matter for predicting \emph{mpg}?"
  \item Tests for changes in sum of squares with factor
  \end{itemize}
\item Wald t-scores for \emph{levels of factors}
  \begin{itemize}
  \item e.g. "Is the coefficient for \emph{gear3} different from \emph{gear4?}"
  \item Tests whether a coefficient = 0, given the estimated value (mean) and the variablity (SE) of the coefficient
  \end{itemize}
\item \textbf{p-values are only meaningful if the model assumptions are valid}
\end{itemize}

## drop-1 ANOVA

\tiny
```{r, echo=TRUE} 
#mpg depends on gears
mod1 <- lm(mpg ~ factor(gear), data = mtcars)
drop1(mod1,test='F') #Effect of gears is very strong
```

```{r, echo=TRUE} 
#mpg depends on disp
mod2 <- lm(mpg ~ disp, data = mtcars)
drop1(mod2,test='F') #Effect of disp is also very strong
```

## drop-1 ANOVA
\tiny
```{r, echo=TRUE} 
#mpg depends on disp and gear
mod3 <- lm(mpg ~ disp + factor(gear), data = mtcars)
drop1(mod3,test='F') #Effect of disp is very strong, and erases the effect of gear
```

```{r, echo=TRUE} 
#mpg depends on disp interacted with gear
mod4 <- lm(mpg ~ disp*factor(gear), data = mtcars)
drop1(mod4,test='F') #Interaction effect is strong. Why are disp and gear not shown?
```

## Wald t-scores
- Wald t-scores are shown in model `summary`
- t-score = mean$\div$SD 
- p-value comes from Student's t-distribution (similar to Normal, but has longer tails depending on sample size)

\tiny

```{r, echo=TRUE} 
summary(mod1)
```

## Comparing between intercepts

>- If you've found that _gear_ is important, are the levels different from each other?
>- If number of levels = 3+, then you need to account for _multiple comparisons_
>- One common method: Bonferroni correction

\tiny

```{r echo=TRUE, message=FALSE, warning=FALSE}
library(multcomp) #Loads the multcomp package (needs to be installed first)
mod1Comp <- glht(mod1, linfct = mcp('factor(gear)'='Tukey')) #Fits multcomp object using gear
summary(mod1Comp,test=adjusted('bonferroni')) #gear4 different from gear3 only
```

## Checking assumptions

Remember what the model assumes:

\begin{equation*} 
mpg \sim Normal(\textcolor{orange}{\hat{mpg}},\textcolor{red}{\sigma})
\end{equation*}

There are 2 things embedded in this statement:

1. _mpg_ is normally distrubuted around $\textcolor{orange}{\hat{mpg}}$
  - Residuals are normal
2. $\textcolor{red}{\sigma}$ is the same everywhere
  - Residuals have equal variance

We can check this using __residual plots__:

\tiny
```{r eval=FALSE, echo=TRUE}
par(mfrow=c(1,2)) #Divides the plotting window into 1x2 grid
plot(mod1,which=c(1,2)) #Plots residual plot 1 and 2
```


## Residual plots

```{r echo=FALSE,  fig.height=4, fig.width=8}
par(mfrow=c(1,2))
plot(mod1,which=c(1,2))
```

- Plot on the left used to check equal variance
  - Should be no pattern
- Plot on the right used to check residual normality
  - Points should lie along 1:1 line
- Takes some practice to read these

## A challenger approaches!

- Using the code you wrote for last week's exercise:
  - Simulate your own data, fit a model, and look at the residual plots
  - Are there any problems?
